import Head from "next/head";
import Image from "next/image";
import NavOpen from "../components/NavOpen";
import AOS from "aos";
import "aos/dist/aos.css";
import dynamic from "next/dynamic";
import { useState, useEffect, useRef } from "react";

import { gsap } from "gsap";
//const ScrollTrigger = dynamic(() => import("gsap/ScrollTrigger"), {});
import { ScrollTrigger } from "gsap/ScrollTrigger";
gsap.registerPlugin(ScrollTrigger);
import { MenuAlt1Icon } from "@heroicons/react/solid";
//import ScrollText from "../components/ScrollText";
let ScrollText = dynamic(import("../components/ScrollText"), { ssr: false });
import Project from "../components/Project";

export default function Home() {
  const [nav, setNav] = useState(false);
  const contactRef = useRef(null);
  const homeRef = useRef(null);
  const projectRef = useRef(null);
  const shaRef = useRef(null);
  const shaRef2 = useRef(null);
  const glow = useRef(null);
  const textRef1 = useRef(null);
  const textRef2 = useRef(null);
  useEffect(() => {
    AOS.init();
    AOS.refresh();
    if (!nav) {
      document.querySelector("body").style.overflowY = "auto";
    }
    // let body = document.querySelector("body");
    // gsap.to(body, {
    //   backgroundColor: "#CFDBD5",
    //   immediateRender: true,
    //   scrollTrigger: {
    //     trigger: contactRef.current,
    //     scrub: true,
    //     start: "top bottom",
    //     end: "+=100%",
    //     // markers: true,
    //   },
    // });
    // gsap.to(body, {
    //   backgroundColor: "#000000",
    //   immediateRender: false,
    //   scrollTrigger: {
    //     trigger: projectRef.current,
    //     scrub: true,
    //     start: "top bottom",
    //     end: "+=100%",
    //   },
    // });
    // gsap
    //   .timeline({
    //     scrollTrigger: {
    //       trigger: homeRef.current,
    //       pin: true,
    //       scrub: 0.2,
    //       start: "top top",
    //       end: "+=10000",
    //     },
    //   })
    //   .to(shaRef.current, {
    //     rotation: 360 * 5,
    //     duration: 1,
    //     ease: "none",
    //   });
  }, [nav]);
  useEffect(() => {
    AOS.init();
    AOS.refresh();
    let tl = gsap.timeline();
    let tl2 = gsap.timeline();
    let tl3 = gsap.timeline();
    // tl3.to(textRef1.current, {
    //   // rotation: 360 * 5,
    //   duration: 1,
    //   scale: 2,
    //   opacity: 0,

    //   ease: "none",
    //   scrollTrigger: {
    //     trigger: homeRef.current,
    //     pin: true,
    //     scrub: 0.2,
    //     start: "top top",
    //     end: "+=1000",
    //   },
    // });

    // tl3.to(glow.current, {
    //   // rotation: 360 * 5,
    //   duration: 1,
    //   scale: 10,

    //   ease: "none",
    //   scrollTrigger: {
    //     trigger: homeRef.current,
    //     pin: true,
    //     scrub: 0.2,
    //     start: "top top",
    //     end: "+=1000",
    //   },
    // });
    tl2.to(shaRef.current, {
      rotation: 360 * 5,
      duration: 1,
      scale: 1,

      ease: "none",
      scrollTrigger: {
        trigger: homeRef.current,
        pin: true,
        scrub: 0.2,
        start: "top top",
        end: "+=1000",
      },
    });
    // tl.to(shaRef2.current, {
    //   clipPath: "circle(50% at 50% 50%)",
    //   // opacity: 0,
    //   scale: 1,
    //   rotation: 360 * 5,
    //   duration: 1,
    //   ease: "none",
    //   scrollTrigger: {
    //     trigger: homeRef.current,
    //     pin: true,
    //     scrub: 0.2,
    //     start: "top top",
    //     end: "+=1000",
    //   },
    // });
  }, []);

  return (
    <div>
      <Head>
        <title>Xono</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {nav && <NavOpen className="" setNav={setNav} nav={nav} />}
      <div className="relative">
        <div className="h-screen fixed right-0  z-10 p-2  flex ">
          <MenuAlt1Icon
            onClick={(e) => setNav(true)}
            className={`${
              nav && "hidden"
            }   hover:scale-110 hover:text-white transition duration-100 ease-in-out top-0 bottom-0 w-10 my-auto text-white/80 cursor-pointer right-10  `}
          />
        </div>
        <div className="px-[8vw]">
          <section className="h-screen text-5xl lg:text-9xl" ref={homeRef}>
            {/* <h1 className=" BGB flex absolute z-10  " ref={textRef1}>
            Wake up{" "}
          </h1>
          <h1
            className=" absolute z-10 w-full justify-end flex bottom-0   BGB "
            ref={textRef2}
          >
            to Reality
          </h1> */}

            <div className="glow" ref={glow}></div>
            <img
              ref={shaRef}
              className="absolute inset-0 m-auto sc "
              src="/images/s2.svg"
              alt=""
            />
          </section>

          <section className="" ref={projectRef}>
            <div className="pt-2">
              <ScrollText text="PROJECTS" />
            </div>
            <div className="mt-10">
              <div data-aos="fade-right">
                <Project
                  no="01"
                  text="LinkedIn Clone"
                  date="May 2022"
                  link="/images/p1.png"
                />
              </div>
              <Project
                no="02"
                text="LinkedIn Clone"
                date="May 2022"
                link="/images/p1.png"
                rev
              />
              <Project
                no="03"
                text="LinkedIn Clone"
                date="May 2022"
                link="/images/p1.png"
              />
              <Project
                no="04"
                text="LinkedIn Clone"
                date="May 2022"
                link="/images/p1.png"
                rev
              />
            </div>
          </section>
          <section className="h-screen" ref={contactRef}>
            <div className="pt-2">
              <ScrollText text="CONTACT" rev />
            </div>
          </section>
        </div>
      </div>
    </div>
  );
}
